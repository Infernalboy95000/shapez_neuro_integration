ingame:
    interactiveTutorial:
        title: Tutorial
        hints:
            1_0_scan: >-
                Welcome to shapez. Your current goal is to deliver 30 uncolored circle shapes to the HUB.<br><br>
                <strong>Scan terrain</stong> to find a circle shape patch.

            1_0_deep_scan: >-
                <strong>Scan the circle patch</strong> you just found!<br><br>
                This will tell you exactly where the shape tiles are.

            1_1_extractor: >-
                Place an <strong>extractor</strong> on top of an <strong>uncolored circle shape tile</strong> to extract it!<br><br>
                The extractor outputs the shape under it's shape tile, to the side it's facing, indefinitely!.

            1_1_buildings_scan: >-
                <strong>Scan buildings</strong> to locate where the hub is and accepts items.

            1_2_conveyor: >-
                Connect the extractor with some <strong>conveyor belts</strong> to your hub!<br><br>
                Tip: Use the <strong>belt planner</strong> to connect the miner to the hub with conveyor belts.

            1_3_expand: >-
                This is <strong>NOT</strong> an idle game! Build more extractors and belts to finish the goal quicker.<br><br>Tip: Place <strong>lines of extractors</strong> and face them in the
                <strong>right direction</strong>.

            2_1_place_cutter: >-
                Now place a <strong>Cutter</strong> to cut the circles in two halves!<br><br>
                PS: The cutter always cuts from <strong>top to bottom</strong> regardless of its orientation.

            2_2_place_trash: >-
                The cutter can <strong>clog and stall</strong>!<br><br>
                Use a <strong>trash</strong> to get rid of the currently (!) not needed waste.

            2_3_more_cutters: >-
                Good job! Now place <strong>2 more cutters</strong> to speed up this slow process!

            3_1_rectangles: >-
                Now let's extract some rectangles! <strong>Build 4 extractors</strong> and connect them to the hub.<br><br>
                PS: Place a <strong>line of belts</strong>!

            21_1_place_quad_painter: >-
                Place the <strong>quad painter</strong> and get some <strong>circles</strong>, <strong>white</strong> and <strong>red</strong> color!

            21_2_switch_to_wires: >-
                Switch to the wires layer by pressing <strong>E</strong>!<br><br>
                Then <strong>connect all four inputs</strong> of the painter with cables!

            21_3_place_button: >-
                Awesome! Now place a <strong>Switch</strong> and connect it with wires!

            21_4_press_button: >-
                Press the switch to make it <strong>emit a truthy signal</strong> and thus activate the painter.<br><br>
                PS: You don't have to connect all inputs! Try wiring only two.

            1_2_hold_and_drag: You can do it!
buildings:
    hub:
        deliver: Deliver
        toUnlock: to unlock
        levelShortcut: LVL
        endOfDemo: End of Demo
        default:
            name: Hub
            description: Main building. Give it the shape it wants to progress to the next level.

    belt:
        default:
            name: &belt Conveyor Belt
            description: Transports items from it's back to the side it's facing.

    # Internal name for the Extractor
    miner:
        default:
            name: &miner Extractor
            description: Place over a shape or color to extract it. Outputs to the side it's facing.

        chainable:
            name: Extractor (Chain)
            description: Place over a shape or color to extract it. Outputs to the it's facing. Can be chained.

    # Internal name for the Tunnel
    underground_belt:
        default:
            name: &underground_belt Tunnel
            description: Allows you to tunnel resources under buildings and belts.

        tier2:
            name: Tunnel Tier II
            description: Allows you to tunnel resources under buildings and belts.

    # Balancer
    balancer:
        default:
            name: &balancer Balancer
            description: Multifunctional - Evenly distributes all inputs onto all outputs. Has 2 of each, all point to the direction it's facing and it's two tiles long.

        merger:
            name: Merger (small-R)
            description: Merges two conveyor belts into one. Has one input on it's back and another on it's right.

        merger-inverse:
            name: Merger (small-L)
            description: Merges two conveyor belts into one. Has one input on it's back and another on it's left.

        splitter:
            name: Splitter (small-R)
            description: Splits one conveyor belt into two. Outputs on it's front and it's left.

        splitter-inverse:
            name: Splitter (small-L)
            description: Splits one conveyor belt into two. Outputs on it's front and it's right.

    cutter:
        default:
            name: &cutter Cutter
            description: Cuts shapes from top to bottom and outputs both halves. <strong>If you use only one part, be sure to destroy the other part or it will clog and stall!</strong>
        quad:
            name: Cutter (Quad)
            description: Cuts shapes into four parts. <strong>If you use only one part, be sure to destroy the other parts or it will clog and stall!</strong>

    rotater:
        default:
            name: &rotater Rotator
            description: Rotates shapes clockwise by 90 degrees.
        ccw:
            name: Rotator (CCW)
            description: Rotates shapes counter-clockwise by 90 degrees.
        rotate180:
            name: Rotator (180 dg)
            description: Rotates shapes by 180 degrees.

    stacker:
        default:
            name: &stacker Stacker
            description: Combines its inputs, on the same layer if possible, otherwise the right input is stacked on top of the left input.

    mixer:
        default:
            name: &mixer Color Mixer
            description: Mixes two colors using additive blending.

    painter:
        default:
            name: &painter Painter
            description: &painter_desc Paints the whole shape on the left input with the color from the top input.

        mirrored:
            name: Painter (Mirrored)
            description: Paints the whole shape on the left input with the color from the bottom input.

        double:
            name: Painter (Double)
            description: Colors the shapes on the left inputs with the color from the top input.

        quad:
            name: Painter (Quad)
            description: Allows you to color each quadrant of the shape individually. Only slots with a <strong>truthy signal</strong> on the wires layer will be painted!

    trash:
        default:
            name: &trash Trash
            description: Accepts inputs from all sides and destroys them. Forever.

    storage:
        default:
            name: &storage Storage
            description: Stores excess items, up to a given capacity. Prioritizes the left output and can be used as an overflow gate.

    wire:
        default:
            name: Green wire
            description: &wire_desc Transfers signals, which can be items, colours or booleans (1 or 0). Differently-coloured wires do not connect to each other.

        second:
            name: Blue wire
            description: *wire_desc

    wire_tunnel:
        default:
            name: &wire_tunnel Wire Crossing
            description: Allows two wires to cross without connecting to each other.

    constant_signal:
        default:
            name: &constant_signal Constant Signal
            description: Emits a constant signal, which can be either a shape, color or boolean (1 or 0).

    lever:
        default:
            name: &lever Switch
            description: Can be toggled to emit a boolean signal (1 or 0) on the wires layer, which can then be used to control components, for example an item filter.

    logic_gate:
        default:
            name: AND Gate
            description: Emits a boolean "1" if both inputs are truthy. (Truthy means shape, color or boolean "1")
        not:
            name: NOT Gate
            description: Emits a boolean "1" if the input is not truthy. (Truthy means shape, color or boolean "1")
        xor:
            name: XOR Gate
            description: Emits a boolean "1" if one of the inputs is truthy, but not both. (Truthy means shape, color or boolean "1")
        or:
            name: OR Gate
            description: Emits a boolean "1" if one of the inputs is truthy. (Truthy means shape, color or boolean "1")

    transistor:
        default:
            name: Transistor (Left)
            description: &transistor_desc Forwards the bottom input if the side input is truthy (a shape, color or "1").

        mirrored:
            name: Transistor (Right)
            description: *transistor_desc

    filter:
        default:
            name: &filter Filter
            description: Connect a signal to route all matching items to the top and the remaining to the right. Can be controlled with boolean signals too.

    display:
        default:
            name: &display Display
            description: Connect a signal to show it on the display - It can be a shape, color or boolean.

    reader:
        default:
            name: &reader Belt Reader
            description: Allows to measure the average belt throughput. Outputs the last read item on the wires layer (once unlocked).

    analyzer:
        default:
            name: &analyzer Shape Analyzer
            description: Analyzes the top right quadrant of the lowest layer of the shape and returns its shape and color.

    comparator:
        default:
            name: &comparator Compare
            description: Returns boolean "1" if both signals are exactly equal. Can compare shapes, colors and booleans.

    virtual_processor:
        default:
            name: &virtual_processor Virtual Cutter
            description: Virtually cuts the shape into two halves.

        rotater:
            name: Virtual Rotator
            description: Virtually rotates the shape clockwise.

        unstacker:
            name: Virtual Unstacker
            description: Virtually extracts the topmost layer to the right output and the remaining ones to the left.

        stacker:
            name: Virtual Stacker
            description: Virtually stacks the right shape onto the left.

        painter:
            name: Virtual Painter
            description: Virtually paints the shape from the bottom input with the color on the right input.

    item_producer:
        default:
            name: Item Producer
            description: Available in sandbox mode only, outputs the given signal from the wires layer on the regular layer.

    constant_producer:
        default:
            name: &constant_producer Constant Producer
            description: Constantly outputs a specified shape or color.

    goal_acceptor:
        default:
            name: &goal_acceptor Goal Acceptor
            description: Deliver shapes to the goal acceptor to set them as a goal.

    block:
        default:
            name: &block Block
            description: Allows you to block a tile.